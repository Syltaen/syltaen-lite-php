// =============================================================================
// > BASE - GRID
// =============================================================================

// ==================================================
// > CONTAINERS
// ==================================================
.container
    position: relative
    z-index: 1
    width: calc(100% - 40px)
    max-width: container(md)
    margin: auto

    // Create a container modifier for each breakpoint
    @each $slug, $bp in $responsive
        &--#{$slug}
            max-width: container($slug)

        // Set the container max size for each breakpoint
        +screen($slug)
            max-width: container($slug)


// ==================================================
// > COLUMNS
// ==================================================
$gridle-context:            12     // number of columns in your grid
$gridle-column-width:       null   // by default it's percentage based depending on the context but you can specify a column width yourself
$gridle-gutter-width:       20px   // size of the gutters
$gridle-gutter-height:      20px   // size of top and bottom gutters
$gridle-gutter-top:         0      // size of top gutter
$gridle-gutter-bottom:      0      // size of bottom gutter
$gridle-gutter-left:        10px   // size of left gutter
$gridle-gutter-right:       10px   // size of right gutter
$gridle-direction:          ltr    // direction
$gridle-dir-attribute:      false  // if need to generate support for dir = "rtl" in order to set part of layout direction
$gridle-states-classes:     false  // if we need to generate the states classes
$gridle-name-multiplicator: 1      // if 5, generate gr-5, gr-10, etc...
$gridle-classes-prefix:     ""     // the prefix used for all classes

@import "assets/vendors/gridle/gridle"
// - or -
// @import "assets/vendors/gridle/gridle-flex"

@import "assets/vendors/gridle/setup"

// Create a colummn class for each breakpoint (assets/variables). Example : .gr-7-sm
@each $slug, $bp in $responsive
    +gridle_register_state($slug, (max-width : breakpoint($slug)))
+gridle_generate_classes()



// ==================================================
// > FLEX
// > Ex: flex flex--row flex--nowrap flex--jc-top flex--align-left
// ==================================================
.flex
    &-row
        +flex(row nowrap)
        &-wrap
            +flex(row wrap)

    &-column
        +flex(column nowrap)
        &-wrap
            +flex(column wrap)


    // Justify content
    @each $jc in start end center space-between space-around
        &-justify-#{$jc}
            @if $jc == start or $jc == end
                $jc: flex-#{$jc}
            justify-content: $jc


    // Align items
    @each $ai in start end center baseline stretch
        &-align-#{$ai}
            @if $ai == start or $ai == end
                $ai: flex-#{$ai}
            align-items: $ai


    // row items
    &-row
        &__item
            flex: 1
            width: 0

        // ========== SPACING ========== //
        @each $slug, $value  in $spacing
            &--spacing-#{$slug}
                margin-left: -1 * $value
                margin-right: -1 * $value
            &--spacing-#{$slug} &__item
                padding-left: $value
                padding-right: $value


        // ========== RESPONSIVE ========== //
        @each $slug, $bp in $responsive
            +screen($slug)
                &--responsive-#{$slug}
                    flex-flow: column nowrap
                &__item
                    width: 100%

// ==================================================
// > GUTTERS
// ==================================================
@each $slug, $value  in $spacing
    .row--#{$slug}-gutters
        margin-left: -1 * $value
        margin-right: -1 * $value

        & > .gr-0, & > .gr-1, & > .gr-2, & > .gr-3, & > .gr-4, & > .gr-5, & > .gr-6, & > .gr-7, & > .gr-8, & > .gr-9, & > .gr-10, & > .gr-11, & > .gr-12
            padding-left: $value
            padding-right: $value



